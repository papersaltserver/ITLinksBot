name: .NET

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      working-directory: ./src
      run: dotnet restore --locked-mode ItLinksBot.sln
    - name: Build
      working-directory: ./src
      run: dotnet build --no-restore ItLinksBot.sln
    - name: Test
      working-directory: ./src
      env:
        TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
        TELEGRAM_CHANNELID: ${{ secrets.TELEGRAM_CHANNELID }}
      run: dotnet test --no-build --verbosity normal ItLinksBot.sln
    # This is the a separate action that sets up buildx runner
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    # So now you can use Actions' own caching!
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DH_USERNAME }}
        password: ${{ secrets.DH_PASSWORD }}
    # And make it available for the builds
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./src
        file: ./src/ItLinksBot/Dockerfile
        push: true
        tags: papersaltserver/itlinksbot:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    # This ugly bit is necessary if you don't want your cache to grow forever
    # till it hits GitHub's limit of 5GB.
    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      
