<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="linksBot.db" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="11.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
    <PackageReference Include="HtmlAgilityPack" Version="1.11.42" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="6.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="6.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.15.1" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Serilog" Version="2.11.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="3.3.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="4.0.1" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="System.Runtime.Caching" Version="6.0.0" />
    <PackageReference Include="System.ServiceModel.Syndication" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="appsettings.debug.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <SourceFileDebug>appsettings.debug.json</SourceFileDebug>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
	<InvariantGlobalization>false</InvariantGlobalization>
  </PropertyGroup>

  <Target Name="CopyConfiguration" AfterTargets="PostBuildEvent">
    <Copy Condition="'$(Configuration)'=='Debug' And Exists('appsettings.debug.json')" SourceFiles="appsettings.debug.json" DestinationFiles="$(TargetDir)config\appsettings.json" />
    <Copy Condition="'$(Configuration)'=='Debug' And !Exists('appsettings.debug.json')" SourceFiles="appsettings.json" DestinationFiles="$(TargetDir)config\appsettings.json" />
    <Copy Condition="'$(Configuration)'=='Release' And !Exists('$(TargetDir)config\appsettings.json')" SourceFiles="appsettings.json" DestinationFiles="$(TargetDir)config\appsettings.json" />
  </Target>

  <Target Name="CopyConfigurationPublish" AfterTargets="Publish">
    <Exec Command="echo custom action has been called after PUBLISH DIR $(TargetDir)config Config $(Configuration)" />
    <MakeDir Directories="$(PublishDir)config" Condition="!Exists('$(PublishDir)config')" />
    <MakeDir Directories="$(PublishDir)db" Condition="!Exists('$(PublishDir)db')" />
    <Copy Condition="'$(Configuration)'=='Debug' And Exists('appsettings.debug.json')" SourceFiles="appsettings.debug.json" DestinationFiles="$(PublishDir)config\appsettings.json" />
    <Copy Condition="'$(Configuration)'=='Debug' And !Exists('appsettings.debug.json')" SourceFiles="appsettings.json" DestinationFiles="$(PublishDir)config\appsettings.json" />
    <Copy Condition="'$(Configuration)'=='Release'  And !Exists('$(PublishDir)config\appsettings.json')" SourceFiles="appsettings.json" DestinationFiles="$(PublishDir)config\appsettings.json" />
  </Target>

</Project>
